blue_power_state = enum {
  off;
  turning_off;
  on;
  turning_on;
}

blue_gatt_connection_state = enum {
    connected;
    connecting;
    disconnected;
    disconnecting;
}

blue_device = record {
  name : optional<string>;
  address : string;
}

blue_scan_result = record {
  dev : blue_device;
  advertising_sid : optional<i32>;
  tx_power : optional<i32>;
  rssi : i32;

  data_complete : bool;
  connectable : bool;
}

blue_gatt_descriptor = interface {
  uuid() : string;
}

blue_gatt_characteristic = interface {
  uuid() : string;
  descriptors() : list<blue_gatt_descriptor>;

  get_value() : binary;
  get_string_value(offset : i32) : string;
}

blue_gatt_service = interface {
  uuid() : string;
  characteristics() : list<blue_gatt_characteristic>;
}

blue_gatt = interface {
  disconnect();
  discover_services() : bool;

  services() : list<blue_gatt_service>;
  read_characteristic(characteristic : blue_gatt_characteristic);
}

blue_view_callback = interface +c {
  on_power_state_change(new_state : blue_power_state);
}

blue_callback = interface +c {
  on_scan_result(scan : blue_scan_result);

  on_gatt_services_discovered(gatt : blue_gatt, result : bool);
  on_gatt_connection_state_change(gatt : blue_gatt, new_state : blue_gatt_connection_state);

  on_characteristic_read(gatt : blue_gatt, characteristic : blue_gatt_characteristic, result : bool);
}

blue_view_controller = interface +j +o {
  blue_enable(enable : bool);
}

blue_controller = interface +j +o {
  is_enabled() : bool;

  scan(enable : bool);

  connect_gatt(dev : blue_device);
}

blue_cast_interface = interface +c {
  static config(
    blue_manager : blue_controller
  );

  static on_create(
    blue_view : blue_view_controller,
    permission_manager : permission_interface
  ) : blue_view_callback;

  static on_destroy();

  static get_callback() : blue_callback;
}
